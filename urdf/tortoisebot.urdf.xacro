<?xml version="1.0"?>
<!-- <robot name="tortoisebot"> -->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="tortoisebot">

    <xacro:property name="cameraSize" value="0.05"/>
    <xacro:property name="cameraMass" value="0.1"/>
    <xacro:property name="cameraHeight" value="0.5"/>
    <xacro:property name="cameraBaseline" value="0.15"/>

    <material name="Orange">
        <color rgba="${255/255} ${108/255} ${10/255} 1.0"/>
    </material>

    <!-- This will be the main body of the tortoise bot -->
    <link name="base_link">
        <visual>
            <geometry>
                <box size="0.6 0.3 0.3" />
            </geometry>
            <material name="silver">
                <color rgba="0.75 0.75 0.75 1" />
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="0.6 0.3 0.3" />
            </geometry>
        </collision>
        <inertial>
            <mass value="1.0" />
            <inertia ixx="0.015" iyy="0.0375" izz="0.0375" ixy="0" ixz="0" iyz="0" />
        </inertial>
    </link>
    <!-- Define front caster -->
    <link name="front_caster">
        <visual>
            <geometry>
                <box size="0.1 0.1 0.3" />
            </geometry>
            <material name="silver" />
        </visual>
        <collision>
            <geometry>
                <box size="0.1 0.1 0.3" />
            </geometry>
        </collision>
        <inertial>
            <mass value="0.1" />
            <inertia ixx="0.00083" iyy="0.00083" izz="0.000167" ixy="0" ixz="0" iyz="0" />
        </inertial>
    </link>

    <!-- Define joint between front caster and main body -->
    <joint name="front_caster_joint" type="continuous">
        <axis xyz="0 0 1" />
        <parent link="base_link" />
        <child link="front_caster" />
        <origin rpy="0 0 0" xyz="0.3 0 0" />
    </joint>

    <!-- Add front wheel and joint -->
    <link name="front_wheel">
        <visual>
            <geometry>
                <cylinder length="0.05" radius="0.035" />
            </geometry>
            <material name="black" />
        </visual>
        <collision>
            <geometry>
                <cylinder length="0.05" radius="0.035" />
            </geometry>
        </collision>
        <inertial>
            <mass value="0.1" />
            <inertia ixx="5.1458e-5" iyy="5.1458e-5" izz="6.125e-5" ixy="0" ixz="0" iyz="0" />
        </inertial>
    </link>
    <joint name="front_wheel_joint" type="continuous">
        <axis xyz="0 0 1" />
        <parent link="front_caster" />
        <child link="front_wheel" />
        <!-- rotate by -90 deg around the x axis -->
        <origin rpy="-1.5708 0 0" xyz="0.05 0 -.15" />
    </joint>

    <!-- Add rear wheels -->
    <link name="right_wheel">
        <visual>
            <geometry>
                <cylinder length="0.05" radius="0.035" />
            </geometry>
            <material name="black">
                <color rgba="0 0 0 1" />
            </material>
        </visual>
        <collision>
            <geometry>
                <cylinder length="0.05" radius="0.035" />
            </geometry>
        </collision>
        <inertial>
            <mass value="0.1" />
            <inertia ixx="5.1458e-5" iyy="5.1458e-5" izz="6.125e-5" ixy="0" ixz="0" iyz="0" />
        </inertial>
    </link>
    <joint name="right_wheel_joint" type="continuous">
        <axis xyz="0 0 1" />
        <parent link="base_link" />
        <child link="right_wheel" />
        <origin rpy="-1.5708 0 0" xyz="-0.2825 -0.125 -.15" />
    </joint>

    <link name="left_wheel">
        <visual>
            <geometry>
                <cylinder length="0.05" radius="0.035" />
            </geometry>
            <material name="black" />
        </visual>
        <collision>
            <geometry>
                <cylinder length="0.05" radius="0.035" />
            </geometry>
        </collision>
        <inertial>
            <mass value="0.1" />
            <inertia ixx="5.1458e-5" iyy="5.1458e-5" izz="6.125e-5" ixy="0" ixz="0" iyz="0" />
        </inertial>
    </link>
    <joint name="left_wheel_joint" type="continuous">
        <axis xyz="0 0 1" />
        <parent link="base_link" />
        <child link="left_wheel" />
        <origin rpy="-1.5708 0 0" xyz="-0.2825 0.125 -.15" />
    </joint>

    <!-- Mount Ouster OS1-64 LiDAR -->
    <!-- <xacro:include filename="$(find ouster_description)/urdf/OS1-64.urdf.xacro" />
    <OS1-64 parent="base_link" name="os1_sensor" hz="10" samples="512">
        <origin xyz="0 0 0.3" rpy="0 0 0" />
    </OS1-64> -->

    <!-- Load differential drive plugin -->
    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <leftJoint>left_wheel_joint</leftJoint>
            <rightJoint>right_wheel_joint</rightJoint>
            <robotBaseFrame>base_link</robotBaseFrame>
            <wheelSeparation>0.25</wheelSeparation>
            <wheelDiameter>0.07</wheelDiameter>
            <publishWheelJointState>true</publishWheelJointState>
        </plugin>
    </gazebo>

    <!-- Define stereo camera link and joint -->
    <link name="camera">
        <collision>
            <origin xyz="0 0 0.0" rpy="0 0 0"/>
            <geometry>
                <box size="${cameraSize} ${cameraSize} ${cameraSize}"/>
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0.0" rpy="0 0 0"/>
            <geometry>
                <box size="${cameraSize} ${cameraSize} ${cameraSize}"/>
            </geometry>
            <material name="orange"/>
        </visual>

        <inertial>
            <mass value="${cameraMass}" />
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <box_inertia m="${cameraMass}" x="${cameraSize}" y="${cameraSize}" z="${cameraSize}" />
            <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>
    </link>

    <joint name="camera_joint" type="fixed">
        <axis xyz="0 1 0" />
        <origin xyz=".2 0 ${cameraHeight}" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="camera"/>
    </joint>

    <!-- Stereo Camera -->
    <gazebo reference="camera">
        <material>Gazebo/Orange</material>
        <sensor type="multicamera" name="stereo_camera">
            <update_rate>30.0</update_rate>

            <camera name="left">
                <horizontal_fov>1.13</horizontal_fov>
                <image>
                    <width>1920</width>
                    <height>1200</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>

            <camera name="right">
                <pose>0 -${cameraBaseline} 0 0 0 0</pose>
                <horizontal_fov>1.13</horizontal_fov>
                <image>
                    <width>1920</width>
                    <height>1200</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>

            <plugin name="stereo_camera_controller" filename="libgazebo_ros_multicamera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>multisense_sl/camera</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>left_camera_optical_frame</frameName>
                <!--<rightFrameName>right_camera_optical_frame</rightFrameName>-->
                <hackBaseline>${cameraBaseline}</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
                <visualize>true</visualize>
            </plugin>
        </sensor>
    </gazebo>
</robot>